# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        distribution: [ 'zulu', 'temurin', 'liberica' ]
        java: [ '11', '17' ]
    name: Build with Java ${{ matrix.java }} (${{ matrix.distribution }})

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: maven
    - name: Build
      run: mvn -B compile --file pom.xml
    - name: Install dependencies
      run: |
          sudo echo 'deb http://security.ubuntu.com/ubuntu xenial-security main' | sudo tee -a /etc/apt/sources.list
          sudo apt-get update -qq
          sudo apt-get install -y libaio1 libevent-dev libssl-dev libssl1.0.0
    - name: Test and analysis
      run: mvn -B verify --file pom.xml
    - name: Upload to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ./jacoco-report-aggregate/target/site/jacoco-aggregate/jacoco.xml
    - name: Upload to Sonar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B sonar:sonar -Dsonar.organization=lecousin -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=lecousin_lc-spring-data-r2dbc -DprojectName=lc-spring-data-r2dbc -Dsonar.projectName=lc-spring-data-r2dbc
